log4j.rootLogger=INFO, Console, Database

#Console
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n

#指定appender类的完全限定名
log4j.appender.Database=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.Database.layout=org.apache.log4j.PatternLayout
#指定连接数据库的URL
log4j.appender.Database.URL=jdbc:mysql://localhost:3306/db
#指定连接数据库的驱动
log4j.appender.Database.driver=com.mysql.jdbc.Driver
#指定连接数据库的账号
log4j.appender.Database.user=root
#指定连接数据库的密码
log4j.appender.Database.password=root
#指定要插入数据库的SQL语句及其格式：user_id――用户id、user_name――用户姓名、class_name――类名、mothod_name――方法名、create_time――产生时间、log_level――日志级别、log_message――日志信息
log4j.appender.Database.sql=insert into log4j_log(user_id, user_name, class_name, mothod_name, create_time, log_level, log_message) values ('%X{userId}', '%X{userName}', '%C', '%M', '%d{yyyy-MM-dd HH\:mm\:ss\:SSS}', '%p', '%m')


#设置日志信息的布局，在log4j中有如下5中布局样式：
#1、org.apache.log4j.HTMLLayout（HTML表格形式的布局）
#2、org.apache.log4j.PatternLayout（可以灵活地指定的布局）
#3、org.apache.log4j.SimpleLayout（包含日志信息级别和信息字符串的布局）
#4、org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等的布局）
#5、org.apache.log4j.xml.XMLLayout（xml布局）
#不同的布局又有不同的选项：
#1、org.apache.log4j.HTMLLayout选项 ：
#默认值false,输出java文件名称和行号
#log4j.appender.appenderName.layout.LocationInfo=true
#默认值是 Log4J Log Messages
#log4j.appender.appenderName.layout.Title=my app file
#2、org.apache.log4j.PatternLayout选项
#指定怎样格式化指定的消息
#log4j.appender.appenderName.layout.ConversionPattern=%m%n
#说明参数如下：
#－X: X信息输出时左对齐；
#%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,
#%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#%r: 输出自应用启动到输出该log信息耗费的毫秒数
#%c: 输出日志信息所属的类目，通常就是所在类的全名
#%t: 输出产生该日志事件的线程名
#%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
#%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
#%%: 输出一个"%"字符
#%F: 输出日志消息产生时所在的文件名称
#%L: 输出代码中的行号
#%m: 输出代码中指定的消息,产生的日志具体信息
#%n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行
#可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：
#%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。
#%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。
#%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。
#%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边交远销出的字符截掉。
#3、org.apache.log4j.xml.XMLLayout选项
#默认值false,输出java文件和行号
#log4j.appender.appenderName.layout.LocationInfo=true
